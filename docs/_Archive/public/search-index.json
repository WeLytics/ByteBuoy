[{"content":"Well-thought-through product announcements will help increase feature awareness and engage users with new functionality. Just like sharing your public roadmap, it\u0026rsquo;s also a great way to let potential customers see that you\u0026rsquo;re constantly improving.\nFurther reading Read How to announce product updates and features ","date":"2023-09-07","id":0,"permalink":"/blog/example-post/","summary":"You can use blog posts for announcing product updates and features.","tags":[],"title":"Example Post"},{"content":"","date":"2023-09-07","id":1,"permalink":"/blog/","summary":"","tags":[],"title":"Blog"},{"content":"","date":"2023-09-07","id":2,"permalink":"/docs/getting-started/","summary":"","tags":[],"title":"Getting Started"},{"content":"Troubleshooting Builds: ByteBuoy.Agent Error Issue When attempting to run the ByteBuoy.Agent, you encounter the following error message:\nError reading config: Line: 1, Col: 1, Idx: 0Failed to create an instance of type 'ByteBuoy.Infrastructure.Config.JobDto\nCause This error typically indicates that the Trim Code option was enabled during the build process of the Agent. The YAML reader heavily relies on reflection, and the code trimming feature, which removes unused code, can lead to issues by inadvertently removing necessary code paths that the YAML reader depends on.\nSolution To resolve this issue, please follow these steps:\nDisable the Trim Code Option: Navigate to your build configuration settings and locate the Trim Code option. Ensure that this option is deactivated or turned off.\nRebuild the Agent: After disabling the Trim Code option, rebuild the ByteBuoy.Agent.\nRun the Agent Again: With the Trim Code option disabled, run the ByteBuoy.Agent once more. The error should no longer occur, and the Agent should function as expected.\nBy following these steps, you should be able to successfully troubleshoot and resolve the build error encountered with ByteBuoy.Agent.\n","date":"2023-09-07","id":3,"permalink":"/docs/contributing/build-notes/","summary":"Troubleshooting Builds: ByteBuoy.Agent Error Issue When attempting to run the ByteBuoy.Agent, you encounter the following error message:\nError reading config: Line: 1, Col: 1, Idx: 0Failed to create an instance of type 'ByteBuoy.","tags":[],"title":"Build Notes"},{"content":"Adding a Database Migration To add a new database migration, please run the script src\\addMigration.cmd. When prompted, ensure that the naming convention follows PascalCase and accurately describes the changes you have made. For instance, if you have added a metrics table, you might name it AddedMetricsTable.\nUndoing or Removing the Last Database Migration In case you need to undo or remove the most recent database migration during the development phase, especially if it was configured incorrectly or in error, execute the script src\\undoMigration.cmd. This will help in reverting the changes made by the last migration.\nTroubleshooting Problem: Could not execute because the specified command or file was not found. Possible reasons for this include:\nYou misspelled a built-in dotnet command. You intended to execute a .NET program, but dotnet-ef does not exist. You intended to run a global tool, but a dotnet-prefixed executable with this name could not be found on the PATH. Solution: Install Entity Framework Core tools: https://learn.microsoft.com/en-us/ef/core/cli/\ndotnet tool install --global dotnet-ef\n","date":"2023-09-07","id":4,"permalink":"/docs/contributing/database-migrations/","summary":"Adding a Database Migration To add a new database migration, please run the script src\\addMigration.cmd. When prompted, ensure that the naming convention follows PascalCase and accurately describes the changes you have made.","tags":[],"title":"Database migrations"},{"content":"Deployment Using Traefik as an Edge Router (Docker Swarm) This section outlines a deployment strategy for ByteBuoy utilizing Traefik.io, a powerful edge router, to establish a comprehensive ByteBuoy environment. This environment includes essential components such as the Frontend, API-Backend, and Proxy.\nThe strategy leverages the current Git repository as a base, employing it to build the necessary Docker images for deployment. This approach ensures that the most up-to-date codebase is used in the deployment process.\nClone the git repository into a sub folder git clone https://github.com/WeLytics/ByteBuoy.git\nCopy build-docker-compose.yml, traefik-docker-compose.yml and appsettings.json.docker to the current directory Linux cp ./ByteBuoy/scripts/deployment/traefik-docker-swarm/build-docker-compose.yml .\rcp ./ByteBuoy/scripts/deployment/traefik-docker-swarm/traefik-docker-compose.yml .\rcp ./ByteBuoy/src/ByteBuoy.API/appsettings.json.docker appsettings.json\rWindows copy .\\ByteBuoy\\scripts\\deployment\\traefik-docker-swarm\\build-docker-compose.yml .\rcopy .\\ByteBuoy\\scripts\\deployment\\traefik-docker-swarm\\traefik-docker-compose.yml .\rcopy .\\ByteBuoy\\src\\ByteBuoy.API\\appsettings.json.docker appsettings.json\rModify the traefik-docker-compose.yml file to include your specific Traefik labels, such as Certresolver and Hosts. Additionally, ensure that the environment variables are correctly set. Refer to the comments within the file for detailed guidance and examples.\nModify /client/ByteBuoy.Web/.env.docker\nSet your defined proxy domain name to the environment variable VITE_BACKEND_API. Make sure the url path /proxy remains in place\nVITE_BACKEND_API_URI=https://bytebuoyproxy.yourdomain.com/proxy\rModify /src/ByteBuoy.API/appsettings.json.docker and set CORS Origins. Make sure, you also set the Proxy Domain Name as a CORS origin for the API Project within the appsettings.json.docker.\n\u0026#34;Cors\u0026#34;: { \u0026#34;Origins\u0026#34;: \u0026#34;https://bytebuoyproxy.yourdomain.com\u0026#34; },\rBuild the Docker Images docker-compose -f build-docker-compose.yml build\nStart and Deploy Images to Traefik docker stack deploy --compose-file traefik-docker-compose.yml traefik\n","date":"2023-09-07","id":5,"permalink":"/docs/guides/deploy-with-traefik/","summary":"Deployment Using Traefik as an Edge Router (Docker Swarm) This section outlines a deployment strategy for ByteBuoy utilizing Traefik.io, a powerful edge router, to establish a comprehensive ByteBuoy environment.","tags":[],"title":"Deploy with Traefik"},{"content":"Welcome to ByteBuoy üëã\rIntroduction Welcome to ByteBuoy, an open-source Artefact \u0026amp; File Monitoring solution. ByteBuoy is designed to streamline the process of monitoring, copying, and moving files and artefacts, offering an intuitive Web application to track the status of these operations.\nWhy ByteBuoy We move a large number of files on a daily basis, particularly for the machine learning pipelines. As part of this process, we need a solution to monitor file transactions, such as whether all customers have received their export files, or whether the correct data has been made available for further processing by the machine learning system. After trying a number of monitoring solutions, we decided to build something ourselves. We wanted to share it with everyone. After all, how hard can it be? :D\nFeatures File Monitoring: Keep an eye on your critical files and artefacts with real-time monitoring. Agent for File Operations: A robust agent that can copy or move files according to your configurations. Web Application: A user-friendly web interface to view the status of file operations and monitoring alerts. Getting Started These instructions will get you a copy of the project up and running on your local machine for development and testing purposes.\nPrerequisites To initiate ByteBuoy, ensure you have a functional Docker installation on your system. This prerequisite is essential for running ByteBuoy effectively.\nUsage from Sources To execute ByteBuoy, navigate to the root directory of the source repository and run the command docker compose up. This will initiate the Docker Compose process, which orchestrates the setup and starts ByteBuoy.\ngit clone https://github.com/WeLytics/ByteBuoy.git cd ByteBuoy docker compose up\rLaunch your default web browser and navigate to http://localhost:3000/ to access the application.\nVersioning We use SemVer for versioning. For the versions available, see the tags on this repository.\nü§ù Contributing Contributions, issues and feature requests are welcome!\nFeel free to check issues page. You can also take a look at the contributing guide.\nShow your support Give a ‚≠êÔ∏è if this project helped you!\nAuthor üë§ WeLytics\nWebsite: https://www.welytics.ai Github: @welytics üìù License Copyright ¬© 2024 WeLytics.\nThis project is Apache\u0026ndash;2.0 license licensed.\n","date":"2023-09-07","id":6,"permalink":"/docs/getting-started/getting-started/","summary":"Welcome to ByteBuoy üëã\rIntroduction Welcome to ByteBuoy, an open-source Artefact \u0026amp; File Monitoring solution. ByteBuoy is designed to streamline the process of monitoring, copying, and moving files and artefacts, offering an intuitive Web application to track the status of these operations.","tags":[],"title":"Getting Started"},{"content":"","date":"2023-09-07","id":7,"permalink":"/docs/","summary":"","tags":[],"title":"Docs"},{"content":"","date":"2023-09-07","id":8,"permalink":"/docs/contributing/","summary":"","tags":[],"title":"Contributing"},{"content":"","date":"2023-09-07","id":9,"permalink":"/docs/guides/","summary":"","tags":[],"title":"Guides"},{"content":"","date":"2023-09-07","id":10,"permalink":"/privacy/","summary":"","tags":[],"title":"Privacy Policy"},{"content":"","date":"2023-09-07","id":11,"permalink":"/","summary":"","tags":[],"title":"ByteBuoy Documentation"},{"content":"","date":"0001-01-01","id":12,"permalink":"/categories/","summary":"","tags":[],"title":"Categories"},{"content":"","date":"0001-01-01","id":13,"permalink":"/contributors/","summary":"","tags":[],"title":"Contributors"},{"content":"","date":"0001-01-01","id":14,"permalink":"/tags/","summary":"","tags":[],"title":"Tags"}]